services:

  # VPN + Transmission + Deluge
  vpn:
    image: haugene/transmission-openvpn
    container_name: vpn
    env_file: .env
    cap_add:
      - NET_ADMIN
    security_opt:
      - label=disable
    devices:
      - /dev/net/tun
    environment:
      - OPENVPN_PROVIDER=${OPENVPN_PROVIDER}
      - OPENVPN_CONFIG=${OPENVPN_CONFIG}
      - LOCAL_NETWORK=${LOCAL_NETWORK}
      - KILL_SWITCH=on
      - UFW_ALLOW_GW_NET=true
      - VPN_DISABLE_IPV6=true
    ports:
      - 9091:9091 # Transmission Web UI
      - 8112:8112 # Deluge Web UI
    volumes:
      - ./config/vpn:/config/vpn
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped

  deluge:
    container_name: deluge
    image: linuxserver/deluge:latest
    restart: always
    network_mode: service:vpn
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /mnt/media/extra/downloads:/downloads # extra media library
      - ${ROOT}/config/deluge:/config
    depends_on:
      - vpn

  # Jackett
  jackett:
    container_name: jackett
    image: linuxserver/jackett:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    #ports:
    #  - 9117:9117
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${ROOT}/downloads/torrent-blackhole:/downloads
      - ${ROOT}/config/jackett:/config

  # Plex Media Server
  plex-server:
    container_name: plex-server
    image: plexinc/pms-docker:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - TZ=${TZ}
      - PLEX_CLAIM=${PLEX_CLAIM}
    #ports:
    #  - 32400:32400
    volumes:
      - ${ROOT}/config/plex/db:/config
      - ${ROOT}/config/plex/transcode:/transcode
      - /mnt/media:/mnt/media # media library
      - /mnt/media/extra:/mnt/media/extra # extra media library

  # Sonarr
  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${ROOT}/config/sonarr:/config
      - /mnt/media/tv:/tv # TV Show folder 
      - /mnt/media/extra:/mnt/media/extra # Extra folder 
      - /mnt/media/downloads:/mnt/media/downloads # download folder

  # Radarr
  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${ROOT}/config/radarr:/config
      - /mnt/media/movies:/movies # Movie folder 
      - /mnt/media/extra:/mnt/media/extra # Extra folder 
      - /mnt/media/downloads:/mnt/media/downloads # download folder

  # NGINX Proxy Manager (remplace l'ancien nginx)
  #npm:
  #  image: jc21/nginx-proxy-manager:latest
  #  container_name: npm
  #  restart: unless-stopped
  #  ports:
  #    - 80:80 # HTTP
  #    - 81:81 # NPM Web UI
  #    - 443:443 # HTTPS
  #  volumes:
  #    - ${ROOT}/config/npm/data:/data
  #    - ${ROOT}/config/npm/letsencrypt:/etc/letsencrypt
  nginx:
    container_name: nginx-proxy
    image: nginx:alpine
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${ROOT}/proxy/logs:/var/log/nginx
      - ${ROOT}/config/nginx/Plexconf:/etc/nginx/conf.d # Store Plex config here
      - ${ROOT}/config/nginx/SSL_certificate:/etc/nginx/SSL_certificate # For HTTPS (later)
      - ${ROOT}/config/nginx/letsencrypt/live:/etc/letsencrypt/live
      - ${ROOT}/config/nginx/letsencrypt/archive:/etc/letsencrypt/archive
      - ${ROOT}/config/nginx/letsencrypt/ssl-dhparams.pem:/etc/letsencrypt/ssl-dhparams.pem

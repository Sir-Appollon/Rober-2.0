services:
  vpn:
    image: haugene/transmission-openvpn
    container_name: vpn
    env_file: .env
    cap_add:
      - NET_ADMIN
    security_opt:
      - label=disable
    devices:
      - /dev/net/tun
    environment:
      - OPENVPN_PROVIDER=${OPENVPN_PROVIDER}
      - OPENVPN_CONFIG=${OPENVPN_CONFIG}
      - LOCAL_NETWORK=${LOCAL_NETWORK}
      - KILL_SWITCH=on
    ports:
      - 9091:9091 # Transmission Web UI
      - 8112:8112 # Deluge Web UI
    volumes:
      - ./config/vpn:/config/vpn
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
  deluge:
    container_name: deluge
    image: linuxserver/deluge:latest
    restart: always
    network_mode: service:vpn # run on the vpn network
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - ${ROOT}/downloads:/downloads # downloads folder
      - ${ROOT}/config/deluge:/config # config files
    depends_on:
      - vpn
  jackett:
    container_name: jackett
    image: linuxserver/jackett:latest
    restart: unless-stopped
    #network_mode: host
    #network_mode: service:vpn # run on the vpn network
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    ports:
      - 9117:9117
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${ROOT}/downloads/torrent-blackhole:/downloads # place where to put .torrent files for manual download
      - ${ROOT}/config/jackett:/config # config files    
  plex-server:
    container_name: plex-server
    image: plexinc/pms-docker:latest
    restart: unless-stopped
    network_mode: host # run on the host network
    #networks:
    #  - plex_network
    environment:
      - TZ=${TZ} # timezone, defined in .env
      - PLEX_CLAIM=${PLEX_CLAIM} # plex claim, defined in .env
    volumes:
      - ${ROOT}/config/plex/db:/config # plex database
      - ${ROOT}/config/plex/transcode:/transcode # temp transcoded files
      - ${ROOT}/complete:/data # media library
    depends_on:
      - nginx
  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${ROOT}/config/sonarr:/config # config files
      - ${ROOT}/complete/tv:/tv # tv shows folder
      - ${ROOT}/downloads:/downloads # download folder
  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${ROOT}/config/radarr:/config # config files
      - ${ROOT}/complete/movies:/movies # movies folder
      - ${ROOT}/downloads:/downloads # download folder
  nginx:
    container_name: nginx-proxy
    image: nginx:alpine
    restart: unless-stopped
    network_mode: host # NGINX will use the host network
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${ROOT}/proxy/logs:/var/log/nginx
      - ${ROOT}/config/nginx/Plexconf:/etc/nginx/conf.d # Store Plex config here
      - ${ROOT}/config/nginx/SSL_certificate:/etc/nginx/SSL_certificate # For HTTPS (later)
      - /etc/letsencrypt/live:/etc/letsencrypt/live
      - /etc/letsencrypt/archive:/etc/letsencrypt/archive
      - /etc/letsencrypt/ssl-dhparams.pem:/etc/letsencrypt/ssl-dhparams.pem

  flaresolverr:
    container_name: flaresolverr
    image: ghcr.io/flaresolverr/flaresolverr:latest
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=${TZ} # timezone, defined in .env
    ports:
      - 8191:8191
    restart: unless-stopped
